{"ast":null,"code":"import { notification } from \"antd\";\nimport codeMessage from \"./codeMessage\";\n\nconst successHandler = (response, typeNotification = {}) => {\n  if (!response.data.result) {\n    response = { ...response,\n      status: 404,\n      url: null,\n      data: {\n        success: false,\n        result: null\n      }\n    };\n  }\n\n  const {\n    data\n  } = response;\n\n  if (data.success === false) {\n    const message = data && data.message;\n    const errorText = message || codeMessage[response.status];\n    const {\n      status\n    } = response;\n    notification.config({\n      duration: 20\n    });\n    notification.error({\n      message: `Request error ${status}`,\n      description: errorText\n    });\n  } else {\n    const message = data && data.message;\n    const successText = message || codeMessage[response.status];\n    const {\n      status\n    } = response; // notification.config({\n    //   duration: 20,\n    // });\n    // notification.success({\n    //   message: `Request success`,\n    //   description: successText,\n    // });\n  }\n\n  return data;\n};\n\nexport default successHandler;","map":{"version":3,"sources":["D:/coding-space/Reactjs/starter-antd-admin-crud-auth-mern/frontend/src/request/successHandler.js"],"names":["notification","codeMessage","successHandler","response","typeNotification","data","result","status","url","success","message","errorText","config","duration","error","description","successText"],"mappings":"AAAA,SAASA,YAAT,QAA6B,MAA7B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,gBAAgB,GAAG,EAA9B,KAAqC;AAC1D,MAAI,CAACD,QAAQ,CAACE,IAAT,CAAcC,MAAnB,EAA2B;AACzBH,IAAAA,QAAQ,GAAG,EACT,GAAGA,QADM;AAETI,MAAAA,MAAM,EAAE,GAFC;AAGTC,MAAAA,GAAG,EAAE,IAHI;AAITH,MAAAA,IAAI,EAAE;AACJI,QAAAA,OAAO,EAAE,KADL;AAEJH,QAAAA,MAAM,EAAE;AAFJ;AAJG,KAAX;AASD;;AACD,QAAM;AAAED,IAAAA;AAAF,MAAWF,QAAjB;;AACA,MAAIE,IAAI,CAACI,OAAL,KAAiB,KAArB,EAA4B;AAC1B,UAAMC,OAAO,GAAGL,IAAI,IAAIA,IAAI,CAACK,OAA7B;AACA,UAAMC,SAAS,GAAGD,OAAO,IAAIT,WAAW,CAACE,QAAQ,CAACI,MAAV,CAAxC;AACA,UAAM;AAAEA,MAAAA;AAAF,QAAaJ,QAAnB;AACAH,IAAAA,YAAY,CAACY,MAAb,CAAoB;AAClBC,MAAAA,QAAQ,EAAE;AADQ,KAApB;AAGAb,IAAAA,YAAY,CAACc,KAAb,CAAmB;AACjBJ,MAAAA,OAAO,EAAG,iBAAgBH,MAAO,EADhB;AAEjBQ,MAAAA,WAAW,EAAEJ;AAFI,KAAnB;AAID,GAXD,MAWO;AACL,UAAMD,OAAO,GAAGL,IAAI,IAAIA,IAAI,CAACK,OAA7B;AACA,UAAMM,WAAW,GAAGN,OAAO,IAAIT,WAAW,CAACE,QAAQ,CAACI,MAAV,CAA1C;AACA,UAAM;AAAEA,MAAAA;AAAF,QAAaJ,QAAnB,CAHK,CAIL;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,SAAOE,IAAP;AACD,CAtCD;;AAwCA,eAAeH,cAAf","sourcesContent":["import { notification } from \"antd\";\r\n\r\nimport codeMessage from \"./codeMessage\";\r\n\r\nconst successHandler = (response, typeNotification = {}) => {\r\n  if (!response.data.result) {\r\n    response = {\r\n      ...response,\r\n      status: 404,\r\n      url: null,\r\n      data: {\r\n        success: false,\r\n        result: null,\r\n      },\r\n    };\r\n  }\r\n  const { data } = response;\r\n  if (data.success === false) {\r\n    const message = data && data.message;\r\n    const errorText = message || codeMessage[response.status];\r\n    const { status } = response;\r\n    notification.config({\r\n      duration: 20,\r\n    });\r\n    notification.error({\r\n      message: `Request error ${status}`,\r\n      description: errorText,\r\n    });\r\n  } else {\r\n    const message = data && data.message;\r\n    const successText = message || codeMessage[response.status];\r\n    const { status } = response;\r\n    // notification.config({\r\n    //   duration: 20,\r\n    // });\r\n    // notification.success({\r\n    //   message: `Request success`,\r\n    //   description: successText,\r\n    // });\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport default successHandler;\r\n"]},"metadata":{},"sourceType":"module"}