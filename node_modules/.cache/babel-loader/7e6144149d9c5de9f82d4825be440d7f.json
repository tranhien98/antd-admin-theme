{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport default function useFetch(fetchingFn) {\n  _s();\n\n  const [result, setResult] = useState(null);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = async () => {\n    setIsLoading(true);\n    const data = await fetchingFn();\n\n    if (data.success === true) {\n      setIsSuccess(true);\n      setResult(data.result);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return {\n    result,\n    isSuccess,\n    isLoading\n  };\n}\n\n_s(useFetch, \"vFQYqEcrSbesFPxCHn+Cw+KR0F0=\");","map":{"version":3,"sources":["D:/coding-space/Reactjs/starter-antd-admin-crud-auth-mern/frontend/src/hooks/useFetch/index.jsx"],"names":["useState","useEffect","useFetch","fetchingFn","result","setResult","isSuccess","setIsSuccess","isLoading","setIsLoading","fetchData","data","success"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,UAAlB,EAA8B;AAAA;;AAC3C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMU,SAAS,GAAG,YAAY;AAC5BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,UAAME,IAAI,GAAG,MAAMR,UAAU,EAA7B;;AACA,QAAIQ,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;AACzBL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,MAAAA,SAAS,CAACM,IAAI,CAACP,MAAN,CAAT;AACD;;AACDK,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GATD;;AAWAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAO;AAAEN,IAAAA,MAAF;AAAUE,IAAAA,SAAV;AAAqBE,IAAAA;AAArB,GAAP;AACD;;GApBuBN,Q","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function useFetch(fetchingFn) {\r\n  const [result, setResult] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n\r\n    const data = await fetchingFn();\r\n    if (data.success === true) {\r\n      setIsSuccess(true);\r\n      setResult(data.result);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  return { result, isSuccess, isLoading };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}