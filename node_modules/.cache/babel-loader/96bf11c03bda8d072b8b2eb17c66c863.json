{"ast":null,"code":"var _jsxFileName = \"D:\\\\coding-space\\\\Reactjs\\\\starter-antd-admin-crud-auth-mern\\\\frontend\\\\src\\\\components\\\\UpdateForm\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateForm({\n  config,\n  formElements\n}) {\n  _s();\n\n  let {\n    entity\n  } = config;\n  const dispatch = useDispatch();\n  const {\n    current,\n    isLoading,\n    isSuccess\n  } = useSelector(selectUpdatedItem);\n  const {\n    state,\n    crudContextAction\n  } = useCrudContext();\n  const {\n    panel,\n    collapsedBox,\n    readBox\n  } = crudContextAction;\n  const [form] = Form.useForm();\n\n  const onSubmit = fieldsValue => {\n    if (fieldsValue) {\n      if (fieldsValue.birthday) {\n        fieldsValue = { ...fieldsValue,\n          birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\")\n        };\n      }\n\n      if (fieldsValue.date) {\n        fieldsValue = { ...fieldsValue,\n          birthday: fieldsValue[\"date\"].format(\"DD/MM/YYYY\")\n        };\n      }\n    }\n\n    const id = current._id;\n    dispatch(crud.update(entity, id, fieldsValue));\n  };\n\n  useEffect(() => {\n    if (current) {\n      if (current.birthday) {\n        current.birthday = dayjs(current.birthday);\n      }\n\n      if (current.date) {\n        current.date = dayjs(current.date);\n      }\n\n      form.setFieldsValue(current);\n    }\n  }, [current]);\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"update\"));\n      dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n  const {\n    isEditBoxOpen\n  } = state;\n  const show = isEditBoxOpen ? {\n    display: \"block\",\n    opacity: 1\n  } : {\n    display: \"none\",\n    opacity: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: show,\n    children: /*#__PURE__*/_jsxDEV(Loading, {\n      isLoading: isLoading,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        onFinish: onSubmit,\n        children: [formElements, /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateForm, \"qIERME+NqxpFWDjEJOUCjj2o8W0=\", false, function () {\n  return [useDispatch, useSelector, useCrudContext, Form.useForm];\n});\n\n_c = UpdateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateForm\");","map":{"version":3,"sources":["D:/coding-space/Reactjs/starter-antd-admin-crud-auth-mern/frontend/src/components/UpdateForm/index.jsx"],"names":["React","useEffect","dayjs","useDispatch","useSelector","crud","useCrudContext","selectUpdatedItem","Button","Form","Loading","UpdateForm","config","formElements","entity","dispatch","current","isLoading","isSuccess","state","crudContextAction","panel","collapsedBox","readBox","form","useForm","onSubmit","fieldsValue","birthday","format","date","id","_id","update","setFieldsValue","open","resetFields","resetAction","list","isEditBoxOpen","show","display","opacity"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { crud } from \"@/redux/crud/actions\";\r\nimport { useCrudContext } from \"@/context/crud\";\r\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\r\n\r\nimport { Button, Form } from \"antd\";\r\nimport Loading from \"@/components/Loading\";\r\n\r\nexport default function UpdateForm({ config, formElements }) {\r\n  let { entity } = config;\r\n  const dispatch = useDispatch();\r\n  const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\r\n\r\n  const { state, crudContextAction } = useCrudContext();\r\n  const { panel, collapsedBox, readBox } = crudContextAction;\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const onSubmit = (fieldsValue) => {\r\n    if (fieldsValue) {\r\n      if (fieldsValue.birthday) {\r\n        fieldsValue = {\r\n          ...fieldsValue,\r\n          birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\r\n        };\r\n      }\r\n      if (fieldsValue.date) {\r\n        fieldsValue = {\r\n          ...fieldsValue,\r\n          birthday: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\r\n        };\r\n      }\r\n    }\r\n\r\n    const id = current._id;\r\n    dispatch(crud.update(entity, id, fieldsValue));\r\n  };\r\n  useEffect(() => {\r\n    if (current) {\r\n      if (current.birthday) {\r\n        current.birthday = dayjs(current.birthday);\r\n      }\r\n      if (current.date) {\r\n        current.date = dayjs(current.date);\r\n      }\r\n      form.setFieldsValue(current);\r\n    }\r\n  }, [current]);\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      readBox.open();\r\n      collapsedBox.open();\r\n      panel.open();\r\n      form.resetFields();\r\n      dispatch(crud.resetAction(\"update\"));\r\n      dispatch(crud.list(entity));\r\n    }\r\n  }, [isSuccess]);\r\n\r\n  const { isEditBoxOpen } = state;\r\n\r\n  const show = isEditBoxOpen\r\n    ? { display: \"block\", opacity: 1 }\r\n    : { display: \"none\", opacity: 0 };\r\n  return (\r\n    <div style={show}>\r\n      <Loading isLoading={isLoading}>\r\n        <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\r\n          {formElements}\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Loading>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}