{"ast":null,"code":"import axios from \"axios\";\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\nimport { token as tokenCookies } from \"@/auth\";\nimport errorHandler from \"./errorHandler\";\nimport successHandler from \"./successHandler\";\nconst headersInstance = {\n  [ACCESS_TOKEN_NAME]: tokenCookies.get()\n};\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: { ...headersInstance\n  }\n});\nconst request = {\n  create: async (entity, jsonData) => {\n    axiosInstance.defaults.headers = { ...headersInstance\n    };\n    console.log(\"jsonData\", jsonData);\n\n    try {\n      const response = await axiosInstance.post(entity + \"/create\", jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  read: async (entity, id) => {\n    axiosInstance.defaults.headers = { ...headersInstance\n    };\n\n    try {\n      const response = await axiosInstance.get(entity + \"/read/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  update: async (entity, id, jsonData) => {\n    axiosInstance.defaults.headers = { ...headersInstance\n    };\n\n    try {\n      const response = await axiosInstance.patch(entity + \"/update/\" + id, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  delete: async (entity, id, option = {}) => {\n    axiosInstance.defaults.headers = { ...headersInstance\n    };\n\n    try {\n      const response = await axiosInstance.delete(entity + \"/delete/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  filter: async (entity, option = {}) => {\n    axiosInstance.defaults.headers = { ...headersInstance\n    };\n\n    try {\n      let filter = option.filter ? \"filter=\" + option.filter : \"\";\n      let equal = option.equal ? \"&equal=\" + option.equal : \"\";\n      let query = `?${filter}${equal}`;\n      const response = await axiosInstance.get(entity + \"/filter\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  search: async (entity, source, option = {}) => {\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get()\n    };\n\n    try {\n      let query = \"\";\n\n      if (option !== {}) {\n        let fields = option.fields ? \"fields=\" + option.fields : \"\";\n        let question = option.question ? \"&q=\" + option.question : \"\";\n        query = `?${fields}${question}`;\n      } // headersInstance.cancelToken = source.token;\n\n\n      const response = await axiosInstance.get(entity + \"/search\" + query, {\n        cancelToken: source.token\n      });\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  list: async (entity, option = {}) => {\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get()\n    };\n    console.log(tokenCookies.get());\n\n    try {\n      let query = \"\";\n\n      if (option !== {}) {\n        let page = option.page ? \"page=\" + option.page : \"\";\n        let items = option.items ? \"&items=\" + option.items : \"\";\n        query = `?${page}${items}`;\n      }\n\n      const response = await axiosInstance.get(entity + \"/list\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  post: async (entityUrl, jsonData, option = {}) => {\n    axiosInstance.defaults.headers = { ...headersInstance\n    };\n\n    try {\n      const response = await axiosInstance.post(entityUrl, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  get: async entityUrl => {\n    axiosInstance.defaults.headers = { ...headersInstance\n    };\n\n    try {\n      const response = await axiosInstance.get(entityUrl);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  patch: async (entityUrl, jsonData) => {\n    axiosInstance.defaults.headers = { ...headersInstance\n    };\n\n    try {\n      const response = await axiosInstance.patch(entityUrl, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  source: () => {\n    // const CancelToken = await axiosInstance.CancelToken;\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    return source;\n  }\n};\nexport default request;","map":{"version":3,"sources":["D:/coding-space/Reactjs/starter-antd-admin-crud-auth-mern/frontend/src/request/request.js"],"names":["axios","API_BASE_URL","ACCESS_TOKEN_NAME","token","tokenCookies","errorHandler","successHandler","headersInstance","get","axiosInstance","create","baseURL","timeout","headers","request","entity","jsonData","defaults","console","log","response","post","error","read","id","update","patch","delete","option","filter","equal","query","search","source","fields","question","cancelToken","list","page","items","entityUrl","CancelToken"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\r\nimport { token as tokenCookies } from \"@/auth\";\r\nimport errorHandler from \"./errorHandler\";\r\nimport successHandler from \"./successHandler\";\r\n\r\nconst headersInstance = { [ACCESS_TOKEN_NAME]: tokenCookies.get() };\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    ...headersInstance,\r\n  },\r\n});\r\n\r\nconst request = {\r\n  create: async (entity, jsonData) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    console.log(\"jsonData\", jsonData);\r\n    try {\r\n      const response = await axiosInstance.post(entity + \"/create\", jsonData);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n  read: async (entity, id) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      const response = await axiosInstance.get(entity + \"/read/\" + id);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n  update: async (entity, id, jsonData) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      const response = await axiosInstance.patch(\r\n        entity + \"/update/\" + id,\r\n        jsonData\r\n      );\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n\r\n  delete: async (entity, id, option = {}) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      const response = await axiosInstance.delete(entity + \"/delete/\" + id);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n\r\n  filter: async (entity, option = {}) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      let filter = option.filter ? \"filter=\" + option.filter : \"\";\r\n      let equal = option.equal ? \"&equal=\" + option.equal : \"\";\r\n      let query = `?${filter}${equal}`;\r\n\r\n      const response = await axiosInstance.get(entity + \"/filter\" + query);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n\r\n  search: async (entity, source, option = {}) => {\r\n    axiosInstance.defaults.headers = {\r\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\r\n    };\r\n    try {\r\n      let query = \"\";\r\n      if (option !== {}) {\r\n        let fields = option.fields ? \"fields=\" + option.fields : \"\";\r\n        let question = option.question ? \"&q=\" + option.question : \"\";\r\n        query = `?${fields}${question}`;\r\n      }\r\n      // headersInstance.cancelToken = source.token;\r\n      const response = await axiosInstance.get(entity + \"/search\" + query, {\r\n        cancelToken: source.token,\r\n      });\r\n\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n\r\n  list: async (entity, option = {}) => {\r\n    axiosInstance.defaults.headers = {\r\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\r\n    };\r\n    console.log(tokenCookies.get());\r\n    try {\r\n      let query = \"\";\r\n      if (option !== {}) {\r\n        let page = option.page ? \"page=\" + option.page : \"\";\r\n        let items = option.items ? \"&items=\" + option.items : \"\";\r\n        query = `?${page}${items}`;\r\n      }\r\n\r\n      const response = await axiosInstance.get(entity + \"/list\" + query);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n\r\n  post: async (entityUrl, jsonData, option = {}) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      const response = await axiosInstance.post(entityUrl, jsonData);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n  get: async (entityUrl) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      const response = await axiosInstance.get(entityUrl);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n  patch: async (entityUrl, jsonData) => {\r\n    axiosInstance.defaults.headers = {\r\n      ...headersInstance,\r\n    };\r\n    try {\r\n      const response = await axiosInstance.patch(entityUrl, jsonData);\r\n      return successHandler(response);\r\n    } catch (error) {\r\n      return errorHandler(error);\r\n    }\r\n  },\r\n  source: () => {\r\n    // const CancelToken = await axiosInstance.CancelToken;\r\n\r\n    const CancelToken = axios.CancelToken;\r\n    const source = CancelToken.source();\r\n    return source;\r\n  },\r\n};\r\nexport default request;\r\n"]},"metadata":{},"sourceType":"module"}