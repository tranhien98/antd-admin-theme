{"ast":null,"code":"import * as actionTypes from \"./types\";\nconst INITIAL_KEY_STATE = {\n  result: null,\n  current: null,\n  isLoading: false,\n  isSuccess: false\n};\nconst INITIAL_STATE = {\n  current: {\n    result: null\n  },\n  list: {\n    result: {\n      items: [],\n      pagination: {\n        current: 1,\n        pageSize: 10,\n        total: 1\n      }\n    },\n    isLoading: false,\n    isSuccess: false\n  },\n  create: INITIAL_KEY_STATE,\n  update: INITIAL_KEY_STATE,\n  delete: INITIAL_KEY_STATE,\n  read: INITIAL_KEY_STATE,\n  search: { ...INITIAL_KEY_STATE,\n    result: []\n  }\n};\n\nconst crudReducer = (state = INITIAL_STATE, action) => {\n  const {\n    payload,\n    keyState\n  } = action;\n\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return INITIAL_STATE;\n\n    case actionTypes.CURRENT_ITEM:\n      return { ...state,\n        current: {\n          result: payload\n        }\n      };\n\n    case actionTypes.REQUEST_LOADING:\n      return { ...state,\n        [keyState]: { ...state[keyState],\n          isLoading: true\n        }\n      };\n\n    case actionTypes.REQUEST_FAILED:\n      return { ...state,\n        [keyState]: { ...state[keyState],\n          isLoading: false,\n          isSuccess: false\n        }\n      };\n\n    case actionTypes.REQUEST_SUCCESS:\n      return { ...state,\n        [keyState]: { ...state[keyState],\n          result: payload,\n          isLoading: false,\n          isSuccess: true\n        }\n      };\n\n    case actionTypes.CURRENT_ACTION:\n      return { ...state,\n        [keyState]: { ...INITIAL_KEY_STATE,\n          current: payload\n        }\n      };\n\n    case actionTypes.RESET_ACTION:\n      return { ...state,\n        [keyState]: { ...INITIAL_STATE[keyState]\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default crudReducer;","map":{"version":3,"sources":["D:/coding-space/Reactjs/starter-antd-admin-crud-auth-mern/frontend/src/redux/crud/reducer.js"],"names":["actionTypes","INITIAL_KEY_STATE","result","current","isLoading","isSuccess","INITIAL_STATE","list","items","pagination","pageSize","total","create","update","delete","read","search","crudReducer","state","action","payload","keyState","type","RESET_STATE","CURRENT_ITEM","REQUEST_LOADING","REQUEST_FAILED","REQUEST_SUCCESS","CURRENT_ACTION","RESET_ACTION"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,SAA7B;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,MAAM,EAAE,IADgB;AAExBC,EAAAA,OAAO,EAAE,IAFe;AAGxBC,EAAAA,SAAS,EAAE,KAHa;AAIxBC,EAAAA,SAAS,EAAE;AAJa,CAA1B;AAOA,MAAMC,aAAa,GAAG;AACpBH,EAAAA,OAAO,EAAE;AACPD,IAAAA,MAAM,EAAE;AADD,GADW;AAIpBK,EAAAA,IAAI,EAAE;AACJL,IAAAA,MAAM,EAAE;AACNM,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,UAAU,EAAE;AACVN,QAAAA,OAAO,EAAE,CADC;AAEVO,QAAAA,QAAQ,EAAE,EAFA;AAGVC,QAAAA,KAAK,EAAE;AAHG;AAFN,KADJ;AASJP,IAAAA,SAAS,EAAE,KATP;AAUJC,IAAAA,SAAS,EAAE;AAVP,GAJc;AAgBpBO,EAAAA,MAAM,EAAEX,iBAhBY;AAiBpBY,EAAAA,MAAM,EAAEZ,iBAjBY;AAkBpBa,EAAAA,MAAM,EAAEb,iBAlBY;AAmBpBc,EAAAA,IAAI,EAAEd,iBAnBc;AAoBpBe,EAAAA,MAAM,EAAE,EAAE,GAAGf,iBAAL;AAAwBC,IAAAA,MAAM,EAAE;AAAhC;AApBY,CAAtB;;AAuBA,MAAMe,WAAW,GAAG,CAACC,KAAK,GAAGZ,aAAT,EAAwBa,MAAxB,KAAmC;AACrD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBF,MAA9B;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKtB,WAAW,CAACuB,WAAjB;AACE,aAAOjB,aAAP;;AACF,SAAKN,WAAW,CAACwB,YAAjB;AACE,aAAO,EACL,GAAGN,KADE;AAELf,QAAAA,OAAO,EAAE;AACPD,UAAAA,MAAM,EAAEkB;AADD;AAFJ,OAAP;;AAMF,SAAKpB,WAAW,CAACyB,eAAjB;AACE,aAAO,EACL,GAAGP,KADE;AAEL,SAACG,QAAD,GAAY,EACV,GAAGH,KAAK,CAACG,QAAD,CADE;AAEVjB,UAAAA,SAAS,EAAE;AAFD;AAFP,OAAP;;AAOF,SAAKJ,WAAW,CAAC0B,cAAjB;AACE,aAAO,EACL,GAAGR,KADE;AAEL,SAACG,QAAD,GAAY,EACV,GAAGH,KAAK,CAACG,QAAD,CADE;AAEVjB,UAAAA,SAAS,EAAE,KAFD;AAGVC,UAAAA,SAAS,EAAE;AAHD;AAFP,OAAP;;AAQF,SAAKL,WAAW,CAAC2B,eAAjB;AACE,aAAO,EACL,GAAGT,KADE;AAEL,SAACG,QAAD,GAAY,EACV,GAAGH,KAAK,CAACG,QAAD,CADE;AAEVnB,UAAAA,MAAM,EAAEkB,OAFE;AAGVhB,UAAAA,SAAS,EAAE,KAHD;AAIVC,UAAAA,SAAS,EAAE;AAJD;AAFP,OAAP;;AASF,SAAKL,WAAW,CAAC4B,cAAjB;AACE,aAAO,EACL,GAAGV,KADE;AAEL,SAACG,QAAD,GAAY,EACV,GAAGpB,iBADO;AAEVE,UAAAA,OAAO,EAAEiB;AAFC;AAFP,OAAP;;AAOF,SAAKpB,WAAW,CAAC6B,YAAjB;AACE,aAAO,EACL,GAAGX,KADE;AAEL,SAACG,QAAD,GAAY,EACV,GAAGf,aAAa,CAACe,QAAD;AADN;AAFP,OAAP;;AAMF;AACE,aAAOH,KAAP;AArDJ;AAuDD,CAzDD;;AA2DA,eAAeD,WAAf","sourcesContent":["import * as actionTypes from \"./types\";\r\n\r\nconst INITIAL_KEY_STATE = {\r\n  result: null,\r\n  current: null,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  current: {\r\n    result: null,\r\n  },\r\n  list: {\r\n    result: {\r\n      items: [],\r\n      pagination: {\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 1,\r\n      },\r\n    },\r\n    isLoading: false,\r\n    isSuccess: false,\r\n  },\r\n  create: INITIAL_KEY_STATE,\r\n  update: INITIAL_KEY_STATE,\r\n  delete: INITIAL_KEY_STATE,\r\n  read: INITIAL_KEY_STATE,\r\n  search: { ...INITIAL_KEY_STATE, result: [] },\r\n};\r\n\r\nconst crudReducer = (state = INITIAL_STATE, action) => {\r\n  const { payload, keyState } = action;\r\n  switch (action.type) {\r\n    case actionTypes.RESET_STATE:\r\n      return INITIAL_STATE;\r\n    case actionTypes.CURRENT_ITEM:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          result: payload,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_LOADING:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          isLoading: true,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_FAILED:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          isLoading: false,\r\n          isSuccess: false,\r\n        },\r\n      };\r\n    case actionTypes.REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...state[keyState],\r\n          result: payload,\r\n          isLoading: false,\r\n          isSuccess: true,\r\n        },\r\n      };\r\n    case actionTypes.CURRENT_ACTION:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_KEY_STATE,\r\n          current: payload,\r\n        },\r\n      };\r\n    case actionTypes.RESET_ACTION:\r\n      return {\r\n        ...state,\r\n        [keyState]: {\r\n          ...INITIAL_STATE[keyState],\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default crudReducer;\r\n"]},"metadata":{},"sourceType":"module"}