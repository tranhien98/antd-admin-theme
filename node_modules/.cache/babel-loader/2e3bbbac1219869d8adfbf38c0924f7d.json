{"ast":null,"code":"import { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\nimport axios from \"axios\";\nimport errorHandler from \"@/request/errorHandler\";\nimport successHandler from \"@/request/successHandler\";\nimport storePersist from \"@/redux/storePersist\";\nimport { getCookie, setCookie, deleteCookie } from \"./cookie\";\nexport const login = async loginAdminData => {\n  try {\n    const response = await axios.post(API_BASE_URL + `login?timestamp=${new Date().getTime()}`, loginAdminData);\n    token.set(response.data.result.token);\n    return successHandler(response);\n  } catch (error) {\n    return errorHandler(error);\n  }\n};\nexport const logout = () => {\n  token.remove();\n  storePersist.clear();\n};\nexport const token = {\n  get: () => {\n    return getCookie(ACCESS_TOKEN_NAME);\n  },\n  set: token => {\n    return setCookie(ACCESS_TOKEN_NAME, token);\n  },\n  remove: () => {\n    return deleteCookie(ACCESS_TOKEN_NAME);\n  }\n};","map":{"version":3,"sources":["D:/coding-space/Reactjs/starter-antd-admin-crud-auth-mern/frontend/src/auth/auth.service.js"],"names":["API_BASE_URL","ACCESS_TOKEN_NAME","axios","errorHandler","successHandler","storePersist","getCookie","setCookie","deleteCookie","login","loginAdminData","response","post","Date","getTime","token","set","data","result","error","logout","remove","clear","get"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,iBAAvB,QAAgD,0BAAhD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,YAA/B,QAAmD,UAAnD;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAOC,cAAP,IAA0B;AAC7C,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CACrBZ,YAAY,GAAI,mBAAkB,IAAIa,IAAJ,GAAWC,OAAX,EAAqB,EADlC,EAErBJ,cAFqB,CAAvB;AAIAK,IAAAA,KAAK,CAACC,GAAN,CAAUL,QAAQ,CAACM,IAAT,CAAcC,MAAd,CAAqBH,KAA/B;AACA,WAAOX,cAAc,CAACO,QAAD,CAArB;AACD,GAPD,CAOE,OAAOQ,KAAP,EAAc;AACd,WAAOhB,YAAY,CAACgB,KAAD,CAAnB;AACD;AACF,CAXM;AAaP,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1BL,EAAAA,KAAK,CAACM,MAAN;AACAhB,EAAAA,YAAY,CAACiB,KAAb;AACD,CAHM;AAKP,OAAO,MAAMP,KAAK,GAAG;AACnBQ,EAAAA,GAAG,EAAE,MAAM;AACT,WAAOjB,SAAS,CAACL,iBAAD,CAAhB;AACD,GAHkB;AAInBe,EAAAA,GAAG,EAAGD,KAAD,IAAW;AACd,WAAOR,SAAS,CAACN,iBAAD,EAAoBc,KAApB,CAAhB;AACD,GANkB;AAOnBM,EAAAA,MAAM,EAAE,MAAM;AACZ,WAAOb,YAAY,CAACP,iBAAD,CAAnB;AACD;AATkB,CAAd","sourcesContent":["import { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\r\n\r\nimport axios from \"axios\";\r\nimport errorHandler from \"@/request/errorHandler\";\r\nimport successHandler from \"@/request/successHandler\";\r\nimport storePersist from \"@/redux/storePersist\";\r\n\r\nimport { getCookie, setCookie, deleteCookie } from \"./cookie\";\r\n\r\nexport const login = async (loginAdminData) => {\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + `login?timestamp=${new Date().getTime()}`,\r\n      loginAdminData\r\n    );\r\n    token.set(response.data.result.token);\r\n    return successHandler(response);\r\n  } catch (error) {\r\n    return errorHandler(error);\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  token.remove();\r\n  storePersist.clear();\r\n};\r\n\r\nexport const token = {\r\n  get: () => {\r\n    return getCookie(ACCESS_TOKEN_NAME);\r\n  },\r\n  set: (token) => {\r\n    return setCookie(ACCESS_TOKEN_NAME, token);\r\n  },\r\n  remove: () => {\r\n    return deleteCookie(ACCESS_TOKEN_NAME);\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}