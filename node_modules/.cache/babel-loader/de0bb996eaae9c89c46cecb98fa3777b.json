{"ast":null,"code":"var _jsxFileName = \"D:\\\\coding-space\\\\Reactjs\\\\starter-antd-admin-crud-auth-mern\\\\frontend\\\\src\\\\context\\\\crud\\\\index.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useMemo, useReducer, createContext, useContext } from \"react\";\nimport { initialState, contextReducer } from \"./reducer\";\nimport contextActions from \"./actions\";\nimport contextSelectors from \"./selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrudContext = /*#__PURE__*/createContext();\n\nfunction CrudContextProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n  return /*#__PURE__*/_jsxDEV(CrudContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n\n_s(CrudContextProvider, \"qvH2RyWsybU3q3wEgwaMp2xbVH0=\");\n\n_c = CrudContextProvider;\n\nfunction useCrudContext() {\n  _s2();\n\n  const context = useContext(CrudContext);\n\n  if (context === undefined) {\n    throw new Error(\"useCrudContext must be used within a CrudContextProvider\");\n  }\n\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return {\n    state,\n    crudContextAction,\n    crudContextSelector\n  };\n}\n\n_s2(useCrudContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { CrudContextProvider, useCrudContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"CrudContextProvider\");","map":{"version":3,"sources":["D:/coding-space/Reactjs/starter-antd-admin-crud-auth-mern/frontend/src/context/crud/index.jsx"],"names":["React","useMemo","useReducer","createContext","useContext","initialState","contextReducer","contextActions","contextSelectors","CrudContext","CrudContextProvider","children","state","dispatch","value","useCrudContext","context","undefined","Error","crudContextAction","crudContextSelector"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,UAAzB,EAAqCC,aAArC,EAAoDC,UAApD,QAAsE,OAAtE;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,WAA7C;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,gBAAP,MAA6B,aAA7B;;AAEA,MAAMC,WAAW,gBAAGN,aAAa,EAAjC;;AAEA,SAASO,mBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAA2C;AAAA;;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACI,cAAD,EAAiBD,YAAjB,CAApC;AACA,QAAMS,KAAK,GAAGb,OAAO,CAAC,MAAM,CAACW,KAAD,EAAQC,QAAR,CAAP,EAA0B,CAACD,KAAD,CAA1B,CAArB;AAEA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,KAA7B;AAAA,cAAqCH;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GALQD,mB;;KAAAA,mB;;AAOT,SAASK,cAAT,GAA0B;AAAA;;AACxB,QAAMC,OAAO,GAAGZ,UAAU,CAACK,WAAD,CAA1B;;AACA,MAAIO,OAAO,KAAKC,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,0DAAV,CAAN;AACD;;AACD,QAAM,CAACN,KAAD,EAAQC,QAAR,IAAoBG,OAA1B;AACA,QAAMG,iBAAiB,GAAGZ,cAAc,CAACM,QAAD,CAAxC;AACA,QAAMO,mBAAmB,GAAGZ,gBAAgB,CAACI,KAAD,CAA5C;AACA,SAAO;AAAEA,IAAAA,KAAF;AAASO,IAAAA,iBAAT;AAA4BC,IAAAA;AAA5B,GAAP;AACD;;IATQL,c;;AAWT,SAASL,mBAAT,EAA8BK,cAA9B","sourcesContent":["import React, { useMemo, useReducer, createContext, useContext } from \"react\";\r\nimport { initialState, contextReducer } from \"./reducer\";\r\nimport contextActions from \"./actions\";\r\nimport contextSelectors from \"./selectors\";\r\n\r\nconst CrudContext = createContext();\r\n\r\nfunction CrudContextProvider({ children }) {\r\n  const [state, dispatch] = useReducer(contextReducer, initialState);\r\n  const value = useMemo(() => [state, dispatch], [state]);\r\n\r\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\r\n}\r\n\r\nfunction useCrudContext() {\r\n  const context = useContext(CrudContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useCrudContext must be used within a CrudContextProvider\");\r\n  }\r\n  const [state, dispatch] = context;\r\n  const crudContextAction = contextActions(dispatch);\r\n  const crudContextSelector = contextSelectors(state);\r\n  return { state, crudContextAction, crudContextSelector };\r\n}\r\n\r\nexport { CrudContextProvider, useCrudContext };\r\n"]},"metadata":{},"sourceType":"module"}