{"ast":null,"code":"var _jsxFileName = \"D:\\\\coding-space\\\\Reactjs\\\\starter-antd-admin-crud-auth-mern\\\\frontend\\\\src\\\\components\\\\ReadItem\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCurrentItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReadItem({\n  config\n}) {\n  _s();\n\n  let {\n    readColumns\n  } = config;\n  const {\n    result: currentResult\n  } = useSelector(selectCurrentItem);\n  const {\n    state\n  } = useCrudContext();\n  const {\n    isReadBoxOpen\n  } = state;\n  const [listState, setListState] = useState([]);\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    console.log(\"currentResult :\", currentResult);\n    console.log(\"readColumns :\", readColumns);\n\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    const list = [];\n    readColumns.map(props => {\n      const propsKey = props.dataIndex;\n      const propsTitle = props.title;\n      const value = valueByString(currentResult, propsKey);\n      list.push({\n        propsKey,\n        label: propsTitle,\n        value: value\n      });\n    });\n    setListState(list);\n  }, [currentResult]);\n  const show = isReadBoxOpen ? {\n    display: \"block\",\n    opacity: 1\n  } : {\n    display: \"none\",\n    opacity: 0\n  };\n  const itemsList = listState.map(item => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 12,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"gutter-row\",\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"gutter-row\",\n        span: 2,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"gutter-row\",\n        span: 14,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, item.propsKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  });\n  console.log(\"itemsList :\", itemsList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: show,\n    children: itemsList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ReadItem, \"3opOLj8gqXSNRkL54Bbm/2A+nP4=\", false, function () {\n  return [useSelector, useCrudContext];\n});\n\n_c = ReadItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadItem\");","map":{"version":3,"sources":["D:/coding-space/Reactjs/starter-antd-admin-crud-auth-mern/frontend/src/components/ReadItem/index.jsx"],"names":["React","useEffect","useRef","useState","Row","Col","Button","useSelector","useCrudContext","selectCurrentItem","valueByString","ReadItem","config","readColumns","result","currentResult","state","isReadBoxOpen","listState","setListState","isFirstRun","console","log","current","list","map","props","propsKey","dataIndex","propsTitle","title","value","push","label","show","display","opacity","itemsList","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { useCrudContext } from \"@/context/crud\";\r\nimport { selectCurrentItem } from \"@/redux/crud/selectors\";\r\nimport { valueByString } from \"@/utils/helpers\";\r\n\r\nexport default function ReadItem({ config }) {\r\n  let { readColumns } = config;\r\n  const { result: currentResult } = useSelector(selectCurrentItem);\r\n  const { state } = useCrudContext();\r\n  const { isReadBoxOpen } = state;\r\n  const [listState, setListState] = useState([]);\r\n\r\n  const isFirstRun = useRef(true);\r\n  useEffect(() => {\r\n    console.log(\"currentResult :\", currentResult);\r\n    console.log(\"readColumns :\", readColumns);\r\n    if (isFirstRun.current) {\r\n      isFirstRun.current = false;\r\n      return;\r\n    }\r\n    const list = [];\r\n    readColumns.map((props) => {\r\n      const propsKey = props.dataIndex;\r\n      const propsTitle = props.title;\r\n      const value = valueByString(currentResult, propsKey);\r\n      list.push({ propsKey, label: propsTitle, value: value });\r\n    });\r\n    setListState(list);\r\n  }, [currentResult]);\r\n\r\n  const show = isReadBoxOpen\r\n    ? { display: \"block\", opacity: 1 }\r\n    : { display: \"none\", opacity: 0 };\r\n\r\n  const itemsList = listState.map((item) => {\r\n    return (\r\n      <Row key={item.propsKey} gutter={12}>\r\n        <Col className=\"gutter-row\" span={8}>\r\n          <p>{item.label}</p>\r\n        </Col>\r\n        <Col className=\"gutter-row\" span={2}>\r\n          <p> : </p>\r\n        </Col>\r\n        <Col className=\"gutter-row\" span={14}>\r\n          <p>{item.value}</p>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  });\r\n\r\n  console.log(\"itemsList :\", itemsList);\r\n  return <div style={show}>{itemsList}</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}