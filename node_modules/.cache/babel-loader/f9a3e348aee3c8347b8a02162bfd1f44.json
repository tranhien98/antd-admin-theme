{"ast":null,"code":"import * as actionTypes from \"./types\";\nimport * as authService from \"@/auth\";\nimport storePersist from \"@/redux/storePersist\";\nimport history from \"@/utils/history\";\nexport const login = loginAdminData => async dispatch => {\n  dispatch({\n    type: actionTypes.LOADING_REQUEST,\n    payload: {\n      loading: true\n    }\n  });\n  const data = await authService.login(loginAdminData);\n\n  if (data.success === true) {\n    const authValue = {\n      current: data.result.admin,\n      loading: false,\n      isLoggedIn: true\n    };\n    storePersist.set(\"auth\", authValue);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: data.result.admin\n    });\n    history.push(\"/\");\n  } else {\n    dispatch({\n      type: actionTypes.FAILED_REQUEST,\n      payload: data\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  authService.logout();\n  dispatch({\n    type: actionTypes.LOGOUT_SUCCESS\n  });\n  history.push(\"/login\");\n};","map":{"version":3,"sources":["D:/coding-space/Reactjs/starter-antd-admin-crud-auth-mern/frontend/src/redux/auth/actions.js"],"names":["actionTypes","authService","storePersist","history","login","loginAdminData","dispatch","type","LOADING_REQUEST","payload","loading","data","success","authValue","current","result","admin","isLoggedIn","set","LOGIN_SUCCESS","push","FAILED_REQUEST","logout","LOGOUT_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,SAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,QAA7B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,OAAO,MAAMC,KAAK,GAAIC,cAAD,IAAoB,MAAOC,QAAP,IAAoB;AAC3DA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP,WAAW,CAACQ,eADX;AAEPC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAFF,GAAD,CAAR;AAIA,QAAMC,IAAI,GAAG,MAAMV,WAAW,CAACG,KAAZ,CAAkBC,cAAlB,CAAnB;;AAEA,MAAIM,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;AACzB,UAAMC,SAAS,GAAG;AAChBC,MAAAA,OAAO,EAAEH,IAAI,CAACI,MAAL,CAAYC,KADL;AAEhBN,MAAAA,OAAO,EAAE,KAFO;AAGhBO,MAAAA,UAAU,EAAE;AAHI,KAAlB;AAKAf,IAAAA,YAAY,CAACgB,GAAb,CAAiB,MAAjB,EAAyBL,SAAzB;AACAP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,WAAW,CAACmB,aADX;AAEPV,MAAAA,OAAO,EAAEE,IAAI,CAACI,MAAL,CAAYC;AAFd,KAAD,CAAR;AAIAb,IAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACD,GAZD,MAYO;AACLd,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,WAAW,CAACqB,cADX;AAEPZ,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAzBM;AA2BP,OAAO,MAAMW,MAAM,GAAG,MAAM,MAAOhB,QAAP,IAAoB;AAC9CL,EAAAA,WAAW,CAACqB,MAAZ;AACAhB,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP,WAAW,CAACuB;AADX,GAAD,CAAR;AAGApB,EAAAA,OAAO,CAACiB,IAAR,CAAa,QAAb;AACD,CANM","sourcesContent":["import * as actionTypes from \"./types\";\r\nimport * as authService from \"@/auth\";\r\nimport storePersist from \"@/redux/storePersist\";\r\nimport history from \"@/utils/history\";\r\n\r\nexport const login = (loginAdminData) => async (dispatch) => {\r\n  dispatch({\r\n    type: actionTypes.LOADING_REQUEST,\r\n    payload: { loading: true },\r\n  });\r\n  const data = await authService.login(loginAdminData);\r\n\r\n  if (data.success === true) {\r\n    const authValue = {\r\n      current: data.result.admin,\r\n      loading: false,\r\n      isLoggedIn: true,\r\n    };\r\n    storePersist.set(\"auth\", authValue);\r\n    dispatch({\r\n      type: actionTypes.LOGIN_SUCCESS,\r\n      payload: data.result.admin,\r\n    });\r\n    history.push(\"/\");\r\n  } else {\r\n    dispatch({\r\n      type: actionTypes.FAILED_REQUEST,\r\n      payload: data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  authService.logout();\r\n  dispatch({\r\n    type: actionTypes.LOGOUT_SUCCESS,\r\n  });\r\n  history.push(\"/login\");\r\n};\r\n"]},"metadata":{},"sourceType":"module"}