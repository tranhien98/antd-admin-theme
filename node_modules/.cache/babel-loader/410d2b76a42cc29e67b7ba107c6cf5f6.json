{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport default function useOnFetch() {\n  _s();\n\n  const [result, setResult] = useState(null);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onFetch = async fetchingFn => {\n    setIsLoading(true);\n    const data = await fetchingFn();\n\n    if (data.success === true) {\n      setIsSuccess(true);\n      setResult(data.result);\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    onFetch,\n    result,\n    isSuccess,\n    isLoading\n  };\n}\n\n_s(useOnFetch, \"u01O/+I0ZMPjgNqkNRI9mXh+fLI=\");","map":{"version":3,"sources":["D:/coding-space/Reactjs/starter-antd-admin-crud-auth-mern/frontend/src/hooks/useOnFetch/index.jsx"],"names":["useState","useOnFetch","result","setResult","isSuccess","setIsSuccess","isLoading","setIsLoading","onFetch","fetchingFn","data","success"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMQ,OAAO,GAAG,MAAOC,UAAP,IAAsB;AACpCF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,UAAMG,IAAI,GAAG,MAAMD,UAAU,EAA7B;;AACA,QAAIC,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;AACzBN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,MAAAA,SAAS,CAACO,IAAI,CAACR,MAAN,CAAT;AACD;;AACDK,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GATD;;AAWA,SAAO;AAAEC,IAAAA,OAAF;AAAWN,IAAAA,MAAX;AAAmBE,IAAAA,SAAnB;AAA8BE,IAAAA;AAA9B,GAAP;AACD;;GAjBuBL,U","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function useOnFetch() {\r\n  const [result, setResult] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onFetch = async (fetchingFn) => {\r\n    setIsLoading(true);\r\n\r\n    const data = await fetchingFn();\r\n    if (data.success === true) {\r\n      setIsSuccess(true);\r\n      setResult(data.result);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return { onFetch, result, isSuccess, isLoading };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}