{"ast":null,"code":"var _jsxFileName = \"D:\\\\coding-space\\\\Reactjs\\\\starter-antd-admin-crud-auth-mern\\\\frontend\\\\src\\\\components\\\\DataTable\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from \"react\";\nimport { Dropdown, Button, PageHeader, Table } from \"antd\";\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectListItems } from \"@/redux/crud/selectors\";\nimport uniqueId from \"@/utils/uinqueId\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DataTable({\n  config,\n  DropDownRowMenu,\n  AddNewItem\n}) {\n  _s();\n\n  let {\n    entity,\n    dataTableColumns,\n    dataTableTitle\n  } = config;\n  dataTableColumns = [...dataTableColumns, {\n    title: \"\",\n    render: row => /*#__PURE__*/_jsxDEV(Dropdown, {\n      overlay: DropDownRowMenu({\n        row\n      }),\n      trigger: [\"click\"],\n      children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {\n        style: {\n          cursor: \"pointer\",\n          fontSize: \"24px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }];\n  const {\n    result: listResult,\n    isLoading: listIsLoading\n  } = useSelector(selectListItems);\n  const {\n    pagination,\n    items\n  } = listResult;\n  const dispatch = useDispatch();\n  const handelDataTableLoad = useCallback(pagination => {\n    dispatch(crud.list(entity, pagination.current));\n  }, []);\n  useEffect(() => {\n    dispatch(crud.list(entity));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      onBack: () => window.history.back(),\n      title: dataTableTitle,\n      ghost: false,\n      extra: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handelDataTableLoad,\n        children: \"Refresh\"\n      }, `${uniqueId()}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddNewItem, {\n        config: config\n      }, `${uniqueId()}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)],\n      style: {\n        padding: \"20px 0px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: dataTableColumns,\n      rowKey: item => item._id,\n      dataSource: items,\n      pagination: pagination,\n      loading: listIsLoading,\n      onChange: handelDataTableLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DataTable, \"wXGwqmdBF13NVmYVeuf4ZKPYw1U=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["D:/coding-space/Reactjs/starter-antd-admin-crud-auth-mern/frontend/src/components/DataTable/index.jsx"],"names":["React","useCallback","useEffect","Dropdown","Button","PageHeader","Table","EllipsisOutlined","useSelector","useDispatch","crud","selectListItems","uniqueId","DataTable","config","DropDownRowMenu","AddNewItem","entity","dataTableColumns","dataTableTitle","title","render","row","cursor","fontSize","result","listResult","isLoading","listIsLoading","pagination","items","dispatch","handelDataTableLoad","list","current","window","history","back","padding","item","_id"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\r\nimport { Dropdown, Button, PageHeader, Table } from \"antd\";\r\n\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { crud } from \"@/redux/crud/actions\";\r\nimport { selectListItems } from \"@/redux/crud/selectors\";\r\n\r\nimport uniqueId from \"@/utils/uinqueId\";\r\n\r\nexport default function DataTable({ config, DropDownRowMenu, AddNewItem }) {\r\n  let { entity, dataTableColumns, dataTableTitle } = config;\r\n  dataTableColumns = [\r\n    ...dataTableColumns,\r\n    {\r\n      title: \"\",\r\n      render: (row) => (\r\n        <Dropdown overlay={DropDownRowMenu({ row })} trigger={[\"click\"]}>\r\n          <EllipsisOutlined style={{ cursor: \"pointer\", fontSize: \"24px\" }} />\r\n        </Dropdown>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const { result: listResult, isLoading: listIsLoading } = useSelector(\r\n    selectListItems\r\n  );\r\n\r\n  const { pagination, items } = listResult;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handelDataTableLoad = useCallback((pagination) => {\r\n    dispatch(crud.list(entity, pagination.current));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(crud.list(entity));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        onBack={() => window.history.back()}\r\n        title={dataTableTitle}\r\n        ghost={false}\r\n        extra={[\r\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\r\n            Refresh\r\n          </Button>,\r\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\r\n        ]}\r\n        style={{\r\n          padding: \"20px 0px\",\r\n        }}\r\n      ></PageHeader>\r\n      <Table\r\n        columns={dataTableColumns}\r\n        rowKey={(item) => item._id}\r\n        dataSource={items}\r\n        pagination={pagination}\r\n        loading={listIsLoading}\r\n        onChange={handelDataTableLoad}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}